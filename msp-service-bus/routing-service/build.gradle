apply plugin: 'war'
apply plugin: 'jetty'
apply plugin: 'jacoco'

version = '1.0.0.SNAPSHOT'

def springVersion = '4.1.6.RELEASE'
def springIntVersion = '4.1.3.RELEASE'
def slf4jlog4jVersion = '1.7.12'
def hamcrestVersion = '1.3'
def tomcatHome = 'F:/apache-tomcat-7.0.47'
def tomcatDeployment = tomcatHome+'/webapps'

httpPort = 18080
stopPort = 19090
stopKey = "stop"

repositories{
    mavenCentral()
}

sourceSets {
    integrationTest {
        java.srcDir file('src/integTest/java')
        resources.srcDir file('src/integTest/resources')
        compileClasspath = sourceSets.main.output + sourceSets.test.output + configurations.testRuntime
        runtimeClasspath = output + compileClasspath
    }
}

dependencies{
    compile "org.springframework:spring-webmvc:$springVersion"
    compile "org.springframework.integration:spring-integration-core:$springIntVersion"
    compile "org.springframework.integration:spring-integration-http:$springIntVersion"
    compile "org.springframework.integration:spring-integration-xml:$springIntVersion"
    compile "org.slf4j:slf4j-log4j12:$slf4jlog4jVersion"
    testCompile "org.springframework.integration:spring-integration-test:$springIntVersion"
    testCompile "org.hamcrest:hamcrest-library:$hamcrestVersion"
}

war{
    archiveName = 'routing-service.war'
}

jacoco {
    toolVersion = "0.7.4.201502262128"
}

test{
    exclude '**/*IntegTest.class'
}

task undeploy(type: Delete) {
   delete tomcatDeployment+'/routing-service.war'
 }

task deploy(dependsOn: ':routing-service:build', type: Copy) {
    from "$buildDir/libs"
    into tomcatDeployment
}

task integrationTest(type: Test){
    include '**/*IntegTest.class'
    reports.html.destination = file("$reports.html.destination/integration")
    reports.junitXml.destination = file("$reports.junitXml.destination/integration")
    testClassesDir = sourceSets.integrationTest.output.classesDir
    classpath = sourceSets.integrationTest.runtimeClasspath
}
check.dependsOn integrationTest